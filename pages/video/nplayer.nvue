<template>
  <view class="video-play">
    <video
      :style="`width:${windowWidth * 2}rpx;height:${windowHeight * 2}rpx`"
      ref="videoRef"
      class="player"
      :id="videoId"
      :src="videoSrc"
      :loop="true"
      :controls="false"
      :show-center-play-btn="false"
      @tap.stop="checkVideoPlay"
      @play="onPlay"
      @pause="onPause"
      @error="videoErrorCallback"
      @timeupdate="onTimeupdate"
    ></video>
    <!-- <text style="color: #fff">123321</text> -->
    <cover-view>
      <view class="video-header" :style="`width:${windowWidth * 2}rpx;`">
        <u-icon v-if="isToken" class="left-icon" name="arrow-left" size="48rpx" color="#D8D8D8" @tap="goBack"></u-icon>
        <u-input class="video-header-input" v-model="searchVal" placeholder="搜索你想看的视频" placeholderStyle="color: #979797;" @change="searchVideo"></u-input>
      </view>
    </cover-view>
    <!-- 播放按钮 -->
    <cover-view>
      <view v-if="showPlayBtn && videoSrc" class="video-play-btn" :style="`left:${(windowWidth / 2 - 50) * 2}rpx;top:${windowHeight / 2 - 50}`" @tap.stop="checkVideoPlay">
        <u-icon name="play-right-fill" color="rgba(220, 223, 230, 0.56)" size="100px"></u-icon>
      </view>
    </cover-view>
    <!-- 视频信息 -->
    <cover-view>
      <view class="video-info" :style="`width:${windowWidth * 0.85 * 2}rpx;`">
        <text class="video-info-title">{{ videoDetail.title }}</text>
        <view class="video-info-desc" v-if="videoDetail.desc">
          <text class="video-info-desc-desc">{{ descUnfold ? videoDetail.desc : videoDetail.desc.slice(0, 22) }}</text>
          <text class="descBtn" @tap="descUnfold = !descUnfold">{{ descUnfold ? '收起' : '展开' }}</text>
        </view>
      </view>
    </cover-view>
    <!-- 视频进度条 -->
    <cover-view>
      <view class="video-progress" :style="`width:${windowWidth * 2}rpx;`">
        <view class="video-progress2" :style="`width:${progressWidth * 2}rpx;`"></view>
      </view>
    </cover-view>

    <!-- 右侧操作按钮 -->
    <cover-view>
      <view class="video-tools">
        <view class="video-tools_video-icon">
          <u-image class="video-tools-img" src="@/static/images/play-list-2-fill.png" />
          <text class="video-tools_video-icon-num">{{ videoDetail.viewCount || 0 }}</text>
        </view>
        <view class="video-tools_video-icon">
          <u-icon name="heart-fill" size="60rpx" :color="videoDetail.isCollection ? '#F52929' : '#D8D8D8'" @tap="videoUpdate(2)"></u-icon>
          <text class="video-tools_video-icon-num">{{ videoDetail.collectCount || 0 }}</text>
        </view>
        <view class="video-tools_video-icon">
          <u-image class="video-tools-img" src="@/static/images/share-forward-fill.png" @tap="shareVideo" />
          <text class="video-tools_video-icon-num">{{ videoDetail.forwardCount || 0 }}</text>
        </view>
      </view>
    </cover-view>
  </view>
</template>

<script>
import { detail, update } from '@/api/video.js'
import playerMixin from './player.mixin'
import color from 'uview-ui/libs/config/color'

export default {
  mixins: [playerMixin],

  methods: {
    // 视频初始化
    videoInit() {
      this.$nextTick(() => {})
    },
    // 播放进度
    onTimeupdate(video) {
      const { currentTime, duration } = video.detail
      this.currentTime = currentTime
      this.progressWidth = (currentTime / duration) * this.windowWidth
    }
  }
}
</script>

<style lang="scss">
.player {
  width: 300px;
  height: 700px;
  color: #dcdfe6;
}

.video-play-btn {
  position: fixed;
  width: 100px;
  height: 100px;
}

.video-header {
  position: fixed;
  height: 68rpx;
  padding: 0px 20rpx;
  top: 24rpx;
  left: 0;
  display: flex;
  flex-direction: row;
  align-items: center;
}
.left-icon {
  margin-right: 24rpx;
}
.right-icon {
  width: 48rpx;
  height: 48rpx;
  margin-left: 24rpx;
}
.u-input {
  flex: 1;
}
.search {
  opacity: 0.5;
}

.video-header-input {
  flex: 1;
  background: rgba(216, 216, 216, 0.5);
  padding: 5px;
  font-size: 14px;
}

.video-info {
  height: auto;
  position: fixed;
  left: 0;
  bottom: 60rpx;
  padding: 0 20rpx;
}

.video-info-title {
  color: #ffffff;
  width: auto;
  max-width: 550rpx;
  font-size: 36rpx;
  font-weight: 600;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  margin-bottom: 12rpx;
  text-indent: 10rpx;
}

.video-info-desc {
  flex-direction: row;
  justify-content: space-between;
  align-items: flex-end;
}

.video-info-desc-desc {
  width: 550rpx;
  height: auto;
  color: #fff;
  padding: 0px;
  font-size: 24rpx;
}

.descBtn {
  color: #fff;
  width: 60rpx;
  height: 60rpx;
  text-align: left;
  line-height: 80rpx;
  min-width: 72rpx;
  margin-left: 6rpx;
  font-size: 28rpx;
  overflow: visible;
}

.video-tools {
  position: fixed;
  width: 60rpx;
  height: 420rpx;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  bottom: 60rpx;
  right: 28rpx;
}

.video-tools_video-icon {
  width: 60rpx;
  height: auto;
  text-align: center;
}
.video-tools-img {
  width: 60rpx;
  height: 60rpx;
}

.video-tools_video-icon-num {
  color: #fff;
  font-size: 28rpx;
  font-weight: 600;
  text-align: center;
}

.video-progress {
  position: fixed;
  height: 4rpx;
  left: 0;
  bottom: 40rpx;
  background-color: #cccccc;
}

.video-progress2 {
  height: 4rpx;
  background-color: #fff;
}
</style>
